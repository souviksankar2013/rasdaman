/*
* This file is part of rasdaman community.
*
* Rasdaman community is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* Rasdaman community is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with rasdaman community.  If not, see <http://www.gnu.org/licenses/>.
*
* Copyright 2003, 2004, 2005, 2006, 2007, 2008, 2009 Peter Baumann /
rasdaman GmbH.
*
* For more information please see <http://www.rasdaman.org>
* or contact Peter Baumann via <baumann@rasdaman.com>.
*/

inline r_ULong *
RealType::convertToCULong(const char *cell, r_ULong *value) const
{
    r_Double tmp;
    *value = (r_ULong) * this->convertToCDouble(cell, &tmp);
    return value;
}

inline r_Long *
RealType::convertToCLong(const char *cell, r_Long *value) const
{
    return (r_Long *)(this->convertToCULong(cell, (r_ULong *)value));
}

inline char *
RealType::makeFromCULong(char *cell, const r_ULong *value) const
{
    r_Double tmp = *value;
    return this->makeFromCDouble(cell, &tmp);
}

inline char *
RealType::makeFromCLong(char *cell, const r_Long *value) const
{
    return this->makeFromCULong(cell, (const r_ULong *)value);
}

