#!/bin/sh
#
# This file is part of rasdaman community.
#
# Rasdaman community is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Rasdaman community is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with rasdaman community.  If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2003, 2004, 2005, 2006, 2007, 2008, 2009 Peter Baumann /
# rasdaman GmbH.
#
# For more information please see <http://www.rasdaman.org>
# or contact Peter Baumann via <baumann@rasdaman.com>.      
#
##########################################################################
#
# SOURCE: rasdaman_insertdemo.sh
#
# PURPOSE:
# create the demo collections used in the rasdaman manuals.
# Currently these are: mr, mr2, rgb.
# Data are taken from the images directory; they are small enough not to
# eat away remarkable disk space.
# The script returns a nonzero exit code upon error.
#
#######################################################################


# --- parameter evaluation --------------------------------------------

if [ $# != 5 ]
then
	echo "Usage: $0 host port imagedir user passwd"
	echo "   host        host name of rasdaman server"
	echo "   port        port where rasdaman server listens (usually: 7001)"
	echo "   imagedir    source image directory"
	echo "   user        rasdaman database login name (needs write access)"
	echo "   passwd      rasdaman password"
	echo "Example: $0 localhost 7001 @pkgdatadir@examples/images rasadmin rasadmin"
	exit 1
fi

    HOST=$1
    PORT=$2
IMAGEDIR=$3
    USER=$4
  PASSWD=$5


# --- global defines --------------------------------------------------

# script name
PROG=$(basename $0)

# database to be used
DB=RASBASE

# shorthand: rasql parameters
RASQL_ARGS="--server $HOST --port $PORT --database $DB --user $USER --passwd $PASSWD"

# --- check prerequisites ---------------------------------------------

echo "$PROG: rasdaman demo data insert script"
echo "$PROG: using host $HOST, image directory $IMAGEDIR, and user/passwd $USER/$PASSWD"

# --- evaluate cmd line parameters ------------------------------------

if [ -f @bindir@rasql ]; then
	RASQL="@bindir@rasql"
else
	echo "$PROG: Error: rasql not found, please install rasdaman first."
	exit 1
fi

# does $IMAGEDIR point to a good directory?
if [ ! -d $IMAGEDIR ]; then
	echo "$PROG: Illegal package path $IMAGEDIR."
	exit 1
fi

coll_names=$($RASQL $RASQL_ARGS -q 'select c from RAS_COLLECTIONNAMES as c' --out string 2>&1)
if [ $? -ne 0 ]; then
    echo "$PROG: Error: failed executing a query with rasql, please install and start rasdaman first."
    exit 1
fi
coll_names=$(echo "$coll_names" | strings)

ingest()
{
    local coll_name="$1"
    local coll_type="$2"
    local data_files="$3"

    echo -n "$PROG: ingesting $coll_name... "
    echo "$coll_names" | grep -q -E "\b$coll_name\b"
    if [ $? -eq 0 ]; then
        echo "already exists, skipping."
    else
        $RASQL $RASQL_ARGS -q "create collection $coll_name $coll_type" --quiet || exit 1
        for i in $data_files; do
	        $RASQL $RASQL_ARGS -q "insert into $coll_name values decode(\$1)" -f $i --quiet > /dev/null
            if [ $? -ne 0 ]; then
                # insert failed -> clean up empty collection
                $RASQL $RASQL_ARGS -q "drop collection $coll_name" --quiet > /dev/null 2>&1
                exit 1
            fi
        done
        echo "ok."
    fi
}

# insert packages
ingest mr GreySet "$IMAGEDIR/mr_?.pgm"
ingest mr2 GreySet "$IMAGEDIR/mr_1.pgm"
ingest rgb RGBSet "$IMAGEDIR/anthur.ppm"

echo "$PROG: done."

# end of rasdaman_insertdemo.sh

