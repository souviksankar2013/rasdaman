#!/bin/sh
#
# This file is part of rasdaman community.
#
# Rasdaman community is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Rasdaman community is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with rasdaman community.  If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2003 - 2019 Peter Baumann / rasdaman GmbH.
#
# For more information please see <http://www.rasdaman.org>
# or contact Peter Baumann via <baumann@rasdaman.com>.
#
# ------------------------------------------------------------------------------
#
# SYNOPSIS
# ./petascope_insertdemo.sh
#
# Description
#  Command-line utility for importing test data to Petascope by WCST_Import.
#  Database connection details are read from etc/petascope.properties
#
# PRECONDITIONS
#  1) PostgreSQL server must be running with petascopedb
#  2) etc/petascope.properties should be present, and the metadata_user should
#     have appropriate write rights in postgres.

PROG=`basename $0`

CODE_OK=0
CODE_FAIL=255

# petascope settings file
SETTINGS="@sysconfdir@/petascope.properties"

# petascope updateN.sql scripts and demo examples
SCRIPT_DIR="@pkgdatadir@/petascope"

# input file directory (coverage files + recipe files .template.json)
DATA_DIRECTORY=$SCRIPT_DIR/petascope_insertdemo_data

# ------------------------------------------------------------------------------
# functions
# ------------------------------------------------------------------------------

#
# logging
#
log() {
  echo "$PROG: $*"
}
logn() {
  echo -n "$PROG: $*"
}
error() {
  echo "$PROG: $*" >&2
  echo "$PROG: exiting." >&2
  exit $CODE_FAIL
}



usage()
{
  local usage="
  Usage: $PROG [OPTION]...

  Description:
    Inserts sample demo data into petascope.

  Options:
    -h, --help
     display this help and exit
    -s, --service-endpoint
     specify the service endpoint (default: http://localhost:8080)
  "

  echo "$usage"
  exit $RC_OK
}

# Read the property of a value by input key from input properties file
get_property_value()
{
    # $1 is path to input properties file (e.g: /opt/rasdaman/etc/petascope.properties).
    # $2 is the key of a property in this file which needs to get the value of this key.
    local properties_file="$1"
    local key="$2"
    # only grep key=value line not commented line (e.g: #key=value)
    grep "^$key=" "$properties_file" | sed -e 's/.*=//' -e 's/^[ \t]*//'
}

#
# Import all coverages exist in petascope
#
import_all_coverages()
{
  log "Starting to ingest example coverages to petascope..."
  for DATA in $DATA_DIRECTORY/*; do

    # 1.1 Get the recipe file template
    RECIPE_TEMPLATE_FILE=$(find $DATA -type f -name "*.template.json")

    # 1.2 Get the coverage id from recipe file
    COVERAGE_ID=$(grep -Po '"coverage_id":.*?[^\\]",' $RECIPE_TEMPLATE_FILE | awk -F'"' '{print $4}')

    # 1.3 Import coverage_id
    import_coverage $COVERAGE_ID $DATA $RECIPE_TEMPLATE_FILE
  done

  log "All coverages are imported correctly. Done."
  log "Ok."
  exit $CODE_OK
}

#
# import
#
import_coverage()
{
  COVERAGE_ID="$1"
  DATA_FOLDER_PATH="$2" # coverage directory
  RECIPE_TEMPLATE_FILE="$3"

  # START

  # 1. Insert coverage by WCS

  # 1.1 Copy file from template.json to ingest.json
  RECIPE_FILE="/tmp/ingest.json"
  cp "$RECIPE_TEMPLATE_FILE" "$RECIPE_FILE"

  sed -i "s|DATA_FOLDER_PATH|$DATA_FOLDER_PATH|g" "$RECIPE_FILE"

  # 1.2 Replace PETASCOPE_URL and SECORE_URL in petascope_insertdemo.template.json
  sed -i "s|PETASCOPE_URL|$PETASCOPE_URL|g" "$RECIPE_FILE"
  sed -i "s|SECORE_URL|$SECORE_URL|g" "$RECIPE_FILE"

  # 1.3 Run wcst_import with petascope_insertdemo.json recipe
  logn "Ingesting $COVERAGE_ID to petascope by wcst_import..."
  "@bindir@/wcst_import.sh" $RECIPE_FILE
  echo "Done."

  # 1.4 Remove tmp $RECIPE_FILE
  logn "Cleaning temporary file..."
  if [ -f "$RECIPE_FILE" ]; then
     rm "$RECIPE_FILE"
  fi
  echo "Done."
}

# ------------------------------------------------------------------------------
# work
# ------------------------------------------------------------------------------

#
# import all coverages example
#


# ----------------------------------------------------------------------------
# parse command-line options
# ----------------------------------------------------------------------------
SERVICE_ENDPOINT=http://localhost:8080

SECORE_URL=$(get_property_value "$SETTINGS" "secore_urls")

if [ -n "$SECORE_URL" ]; then
  SECORE_URL=$SERVICE_ENDPOINT/def
fi

option=
for i in "$@"; do
  if [ -n "$option" ]; then
    case $option in
      -s|--service-endpoint*)
        SERVICE_ENDPOINT="$i";;
      *) error "unknown option: $option";;
    esac
    option=""
  else
    option=""
    case $i in
      -h|--help*)     usage;;
      *)              option="$i";;
    esac
  fi
done

# petascope, secore URL
PETASCOPE_URL=$SERVICE_ENDPOINT/rasdaman/ows

log "Petascope service endpoint is: "$PETASCOPE_URL
log "Secore service endpoint is: "$SECORE_URL

echo -e

import_all_coverages
